{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irunn\\\\git\\\\AccountProject\\\\frontend\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [formData, setFormData] = useState({\n    userid: \"\",\n    password: \"\",\n    username: \"\",\n    email: \"\",\n    hiredate: new Date().toISOString().slice(0, 10) // 날짜 형식 수정\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.userid || !formData.password || !formData.username || !formData.email) {\n      setErrorMessage(\"모든 필드를 입력해주세요.\");\n      return;\n    }\n    if (formData.password.length < 6) {\n      setErrorMessage(\"비밀번호는 최소 6자 이상이어야 합니다.\");\n      return;\n    }\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      setErrorMessage(\"올바른 이메일 형식이 아닙니다.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:8085/api/users/register\", formData);\n      if (response.data.success) {\n        alert(response.data.message);\n\n        // ✅ 회원가입 후 자동 로그인\n        const loginResponse = await axios.post(\"http://localhost:8085/api/auth/login\", {\n          userid: formData.userid,\n          password: formData.password\n        }, {\n          withCredentials: true\n        });\n        if (loginResponse.data.authenticated) {\n          localStorage.setItem(\"user\", JSON.stringify(loginResponse.data));\n          navigate(\"/dashboard\"); // ✅ 자동 로그인 후 대시보드로 이동\n        } else {\n          navigate(\"/login\");\n        }\n      }\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.message) {\n        setErrorMessage(error.response.data.message);\n      } else {\n        setErrorMessage(\"회원가입에 실패했습니다.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD68C\\uC6D0 \\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.error,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userid\",\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        value: formData.userid,\n        onChange: handleChange,\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"\\uC774\\uB984\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"\\uC774\\uBA54\\uC77C\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.signupButton,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"xiRizsa5+RNnZuCFGHzXwlJZNXo=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nconst styles = {\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    backgroundColor: \"#f5f5f5\"\n  },\n  form: {\n    width: \"300px\",\n    background: \"white\",\n    borderRadius: \"8px\",\n    padding: \"20px\",\n    boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n    textAlign: \"center\"\n  },\n  input: {\n    width: \"100%\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"5px\",\n    fontSize: \"14px\"\n  },\n  signupButton: {\n    width: \"100%\",\n    padding: \"10px\",\n    backgroundColor: \"#012345\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    fontSize: \"16px\",\n    cursor: \"pointer\"\n  },\n  error: {\n    color: \"red\",\n    fontSize: \"14px\",\n    marginBottom: \"10px\"\n  }\n};\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","userid","password","username","email","hiredate","Date","toISOString","slice","errorMessage","setErrorMessage","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","length","emailRegex","test","response","post","data","success","alert","message","loginResponse","withCredentials","authenticated","localStorage","setItem","JSON","stringify","error","style","styles","container","children","onSubmit","form","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","input","signupButton","_c","display","justifyContent","alignItems","height","backgroundColor","width","background","borderRadius","padding","boxShadow","textAlign","marginBottom","border","fontSize","color","cursor","$RefreshReg$"],"sources":["C:/Users/irunn/git/AccountProject/frontend/src/components/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Signup() {\r\n    const [formData, setFormData] = useState({\r\n        userid: \"\",\r\n        password: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        hiredate: new Date().toISOString().slice(0, 10), // 날짜 형식 수정\r\n    });\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!formData.userid || !formData.password || !formData.username || !formData.email) {\r\n            setErrorMessage(\"모든 필드를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        if (formData.password.length < 6) {\r\n            setErrorMessage(\"비밀번호는 최소 6자 이상이어야 합니다.\");\r\n            return;\r\n        }\r\n\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailRegex.test(formData.email)) {\r\n            setErrorMessage(\"올바른 이메일 형식이 아닙니다.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:8085/api/users/register\", formData);\r\n\r\n            if (response.data.success) {\r\n                alert(response.data.message);\r\n\r\n                // ✅ 회원가입 후 자동 로그인\r\n                const loginResponse = await axios.post(\"http://localhost:8085/api/auth/login\", {\r\n                    userid: formData.userid,\r\n                    password: formData.password,\r\n                }, { withCredentials: true });\r\n\r\n                if (loginResponse.data.authenticated) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(loginResponse.data));\r\n                    navigate(\"/dashboard\"); // ✅ 자동 로그인 후 대시보드로 이동\r\n                } else {\r\n                    navigate(\"/login\");\r\n                }\r\n            }\r\n        } catch (error) {\r\n            if (error.response && error.response.data && error.response.data.message) {\r\n                setErrorMessage(error.response.data.message);\r\n            } else {\r\n                setErrorMessage(\"회원가입에 실패했습니다.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <form onSubmit={handleSubmit} style={styles.form}>\r\n                <h2>회원 가입</h2>\r\n                {errorMessage && <p style={styles.error}>{errorMessage}</p>}\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"userid\"\r\n                    placeholder=\"아이디\"\r\n                    value={formData.userid}\r\n                    onChange={handleChange}\r\n                    required\r\n                    style={styles.input}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"비밀번호\"\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                    required\r\n                    style={styles.input}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"이름\"\r\n                    value={formData.username}\r\n                    onChange={handleChange}\r\n                    required\r\n                    style={styles.input}\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"이메일\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                    style={styles.input}\r\n                />\r\n                <button type=\"submit\" style={styles.signupButton}>회원가입</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    container: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", backgroundColor: \"#f5f5f5\" },\r\n    form: { width: \"300px\", background: \"white\", borderRadius: \"8px\", padding: \"20px\", boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\", textAlign: \"center\" },\r\n    input: { width: \"100%\", padding: \"10px\", marginBottom: \"10px\", border: \"1px solid #ddd\", borderRadius: \"5px\", fontSize: \"14px\" },\r\n    signupButton: { width: \"100%\", padding: \"10px\", backgroundColor: \"#012345\", color: \"white\", border: \"none\", borderRadius: \"5px\", fontSize: \"16px\", cursor: \"pointer\" },\r\n    error: { color: \"red\", fontSize: \"14px\", marginBottom: \"10px\" },\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}